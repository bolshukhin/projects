import time
import requests
import telebot
import datetime
import schedule
import trace
import sys

# API –∫–ª—é—á–∏
from config import TOKEN_WHEATHER, CHAT_ID_GROUP, API_KEYS, CHAT_ID_PRIVATE

# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
LATITUDE = 59.992330
LONGITUDE = 32.033880

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π prev_weather –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ü–∏–∫–ª–∞ 
bot = telebot.TeleBot(TOKEN_WHEATHER)
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
def send_message(message):
    bot.send_message(chat_id=(CHAT_ID_GROUP), text=message)

def error_message(message_error):
    bot.send_message(chat_id=(CHAT_ID_PRIVATE), text=message_error)


prev_weather = None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —Å –Ø–Ω–¥–µ–∫—Å –ü–æ–≥–æ–¥–∞ API 


def get_weather():
    global weather_condition
    global temperature
    global feels_like_temp
    global pressure_mmHg
    global humidity_percent
    global wind_speed_msec
    global weather
    
    # URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã 
    URL = f"https://api.weather.yandex.ru/v2/informers?lat={LATITUDE}&lon={LONGITUDE}&lang=ru_RU"
    
    HEADERS = {
        "X-Yandex-API-Key": API_KEYS[0],  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –∫–ª—é—á –∏–∑ –º–∞—Å—Å–∏–≤–∞ 
        "Accept-Language": "ru"
    }
    
    response = requests.get(URL, headers=HEADERS)
    
     # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API –Ø–Ω–¥–µ–∫—Å –ü–æ–≥–æ–¥—ã,
     # —Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫–ª—é—á –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å.
     
    if response.status_code == 403:
        message_error = ('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª—é—á.')
        print(message_error)
        #error_message(message_error)
        for i in range(1, len(API_KEYS)):
            message_error = (f"–ü—Ä–æ–±—É—é –¥—Ä—É–≥–æ–π –∫–ª—é—á (–æ—Å—Ç–∞–ª–æ—Å—å {len(API_KEYS) - i} –ø–æ–ø—ã—Ç–æ–∫)")
            print(message_error)
            #error_message(message_error)
            
            HEADERS["X-Yandex-API-Key"] = API_KEYS[i]
            response = requests.get(URL, headers=HEADERS)
            
            if response.status_code == 200:
                break  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        else:
            message_error = ('–Ø–Ω–¥–µ–∫—Å.–ö–∞–±–∏–Ω–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.\n –°–µ—Ä–≤–∏—Å API –Ø–Ω–¥–µ–∫—Å.–ü–æ–≥–æ–¥—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å—É—Ç–∫–∏ –ø–æ –≤–∞—à–µ–º—É —Ç–∞—Ä–∏—Ñ—É')
            print(message_error)
            error_message(message_error)
            return None
        
    if response.status_code == 200:
        
        data=response.json()
    
         # –°–ª–æ–∂–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞ JSON (–ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)     
        fact_data=data['fact']
        weather_condition=fact_data['condition']
        temperature=fact_data['temp']
        feels_like_temp=fact_data['feels_like'] 
        pressure_mmHg=(fact_data['pressure_mm'])
        humidity_percent=(fact_data['humidity'])
        wind_speed_msec=(fact_data["wind_speed"])
        
       # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π weather
        
        if 'cloudy' in weather_condition:
            weather='–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ üå§Ô∏è'
        elif 'rain' in weather_condition:
            weather='–¥–æ–∂–¥—å üåßÔ∏è'
        elif 'thunderstorm' in weather_condition:
            weather='–≥—Ä–æ–∑–∞'
        elif 'showers' in weather_condition:
            weather='–ª–∏–≤–µ–Ω—å üå®Ô∏è'
        elif 'overcast' in weather_condition:
            weather='–ø–∞—Å–º—É—Ä–Ω–æ ‚òÅÔ∏è'
        elif 'light-rain' in weather_condition:
            weather='—Å–ª–µ–≥–∫–∞ –º–æ—Ä–æ—Å–∏—Ç'    
            
       # –ï—Å–ª–∏ –ø–æ–≥–æ–¥–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É—Å–ª–æ–≤–∏—é "—è—Å–Ω–æ", —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –ø–æ–≥–æ–¥—ã   
            
       
          
    else: 
        message_error = ("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞. –ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status_code}")
        print(message_error)
        #error_message(message_error)
        return None
      
    prev_weather = weather_condition  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    return(f'–°–µ–π—á–∞—Å {weather}. '+
            f'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C.'+
            f'\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like_temp}¬∞C.'+
            f'\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure_mmHg} –º–º —Ä—Ç. —Å—Ç.'+
            f'\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity_percent}%'+
            f'\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed_msec} –º/c.')
       




def wheather():
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    global prev_weather 
    global weather_condition
    global current_weather
    while True:
        
        print("–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ–∂–¥—è –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ –∑–∞–ø—É—à–µ–Ω–æ...")        
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–≥–æ–¥—ã

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã —á–µ—Ä–µ–∑ API –Ø–Ω–¥–µ–∫—Å.–ü–æ–≥–æ–¥–∞ 
        current_weather = get_weather()

        weather_info = (f'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C.'+
                       f'\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like_temp}¬∞C.'+
                        f'\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure_mmHg} –º–º —Ä—Ç. —Å—Ç.'+
                        f'\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity_percent}%'+
                        f'\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed_msec} –º/c.')

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        dozhd = (weather_condition == 'rain' or weather_condition == 'thunderstorm' or weather_condition == 'showers' or weather_condition == 'light-rain')
        if dozhd != prev_weather:
            
            if dozhd :
                send_message(f'üåßÔ∏è –î–æ–∂–¥—å –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
                print (f'üåßÔ∏è –î–æ–∂–¥—å –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
            elif prev_weather == dozhd and weather_condition == 'overcast' :
                send_message(f'–î–æ–∂–¥—å –æ–∫–æ–Ω—á–µ–Ω, ‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
                print (f'–î–æ–∂–¥—å –æ–∫–æ–Ω—á–µ–Ω, ‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
            elif prev_weather == dozhd and weather_condition == 'cloudy'  :
                send_message(f'–î–æ–∂–¥—å –æ–∫–æ–Ω—á–µ–Ω, üå§Ô∏è –û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
                print (f'–î–æ–∂–¥—å –æ–∫–æ–Ω—á–µ–Ω, üå§Ô∏è –û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
            elif prev_weather == dozhd and weather_condition == 'clear':
                send_message(f'–î–æ–∂–¥—å –æ–∫–æ–Ω—á–µ–Ω, ‚òÄÔ∏è –°–æ–ª–Ω–µ—á–Ω–æ –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
                print(f'–î–æ–∂–¥—å –æ–∫–æ–Ω—á–µ–Ω, ‚òÄÔ∏è –°–æ–ª–Ω–µ—á–Ω–æ –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ.\n{weather_info}')
            elif prev_weather == None:
                send_message(f'–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–æ–∂–¥—è –Ω–∞ —Ñ–∞–∑–µ–Ω–¥–µ –∑–∞–ø—É—à–µ–Ω–æ...\n{current_weather}')
                print (f'–ó–∞–ø—É—Å–∫.\n{current_weather} ')
        else:
            #send_message(f'–°–µ—Ä–≤–∏—Å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: –ø–æ–≥–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Å–∞–¥–∫–æ–≤ –Ω–µ—Ç {prev_weather}, {weather_condition}')
            time.sleep(2)
            #   –ø–∞—Å–º—É—Ä–Ω–æ.
            if prev_weather == 'overcast':
                print(f'{current_weather}')
            elif prev_weather == 'clear':
                print(f'{current_weather}')
            #   –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏
            elif prev_weather == 'cloudy':
                print(f'{current_weather}')
        prev_weather = weather_condition
        print (prev_weather, weather_condition)
        time.sleep(300)
        
   # –ó–∞–¥–µ—Ä–∂–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥
# –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è —á–µ—Ä–µ–∑ –±–ª–∏–∂–∞–π—à–∏–µ 5 –º–∏–Ω—É—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
now = datetime.datetime.now()

# –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—è—Ç–∏–º–∏–Ω—É—Ç–∫–∏
delta_minutes = (5 - now.minute % 5)

# –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥
time.sleep(delta_minutes * 60)


schedule.every().hour.at(":05").do(wheather)
schedule.every().hour.at(":10").do(wheather)
schedule.every().hour.at(":15").do(wheather)
schedule.every().hour.at(":20").do(wheather)
schedule.every().hour.at(":25").do(wheather)
schedule.every().hour.at(":30").do(wheather)
schedule.every().hour.at(":35").do(wheather)
schedule.every().hour.at(":40").do(wheather)
schedule.every().hour.at(":45").do(wheather)
schedule.every().hour.at(":50").do(wheather)
schedule.every().hour.at(":55").do(wheather)
schedule.every().hour.at(":00").do(wheather)


while True:
    schedule.run_pending()
    time.sleep(1)

